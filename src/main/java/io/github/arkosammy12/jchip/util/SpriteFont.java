package io.github.arkosammy12.jchip.util;

import java.util.Optional;

public class SpriteFont {

    public static int SMALL_FONT_BEGIN_OFFSET = 0x50;
    public static int BIG_FONT_BEGIN_OFFSET = 0xA0;

    private static final int[][] CHIP_8 = {
            {0xF0, 0x90, 0x90, 0x90, 0xF0}, // 0
            {0x60, 0x20, 0x20, 0x20, 0x70}, // 1
            {0xF0, 0x10, 0xF0, 0x80, 0xF0}, // 2
            {0xF0, 0x10, 0xF0, 0x10, 0xF0}, // 3
            {0xA0, 0xA0, 0xF0, 0x20, 0x20}, // 4
            {0xF0, 0x80, 0xF0, 0x10, 0xF0}, // 5
            {0xF0, 0x80, 0xF0, 0x90, 0xF0}, // 6
            {0xF0, 0x10, 0x10, 0x10, 0x10}, // 7
            {0xF0, 0x90, 0xF0, 0x90, 0xF0}, // 8
            {0xF0, 0x90, 0xF0, 0x10, 0xF0}, // 9
            {0xF0, 0x90, 0xF0, 0x90, 0x90}, // A
            {0xF0, 0x50, 0x70, 0x50, 0xF0}, // B
            {0xF0, 0x80, 0x80, 0x80, 0xF0}, // C
            {0xF0, 0x50, 0x50, 0x50, 0xF0}, // D
            {0xF0, 0x80, 0xF0, 0x80, 0xF0}, // E
            {0xF0, 0x80, 0xF0, 0x80, 0x80}  // F
    };

    private static final int[][] CHIP_48 = {
            {0xF0, 0x90, 0x90, 0x90, 0xF0}, // 0
            {0x20, 0x60, 0x20, 0x20, 0x70}, // 1
            {0xF0, 0x10, 0xF0, 0x80, 0xF0}, // 2
            {0xF0, 0x10, 0xF0, 0x10, 0xF0}, // 3
            {0x90, 0x90, 0xF0, 0x10, 0x10}, // 4
            {0xF0, 0x80, 0xF0, 0x10, 0xF0}, // 5
            {0xF0, 0x80, 0xF0, 0x90, 0xF0}, // 6
            {0xF0, 0x10, 0x20, 0x40, 0x40}, // 7
            {0xF0, 0x90, 0xF0, 0x90, 0xF0}, // 8
            {0xF0, 0x90, 0xF0, 0x10, 0xF0}, // 9
            {0xF0, 0x90, 0xF0, 0x90, 0x90}, // A
            {0xE0, 0x90, 0xE0, 0x90, 0xE0}, // B
            {0xF0, 0x80, 0x80, 0x80, 0xF0}, // C
            {0xE0, 0x90, 0x90, 0x90, 0xE0}, // D
            {0xF0, 0x80, 0xF0, 0x80, 0xF0}, // E
            {0xF0, 0x80, 0xF0, 0x80, 0x80}, // F
    };

    private static final int[][] SCHIP_BIG = {
            {0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xC3, 0xE7, 0x7E, 0x3C}, // 0
            {0x18, 0x38, 0x58, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x3C}, // 1
            {0x3E, 0x7F, 0xC3, 0x06, 0x0C, 0x18, 0x30, 0x60, 0xFF, 0xFF}, // 2
            {0x3C, 0x7E, 0xC3, 0x03, 0x0E, 0x0E, 0x03, 0xC3, 0x7E, 0x3C}, // 3
            {0x06, 0x0E, 0x1E, 0x36, 0x66, 0xC6, 0xFF, 0xFF, 0x06, 0x06}, // 4
            {0xFF, 0xFF, 0xC0, 0xC0, 0xFC, 0xFE, 0x03, 0xC3, 0x7E, 0x3C}, // 5
            {0x3E, 0x7C, 0xE0, 0xC0, 0xFC, 0xFE, 0xC3, 0xC3, 0x7E, 0x3C}, // 6
            {0xFF, 0xFF, 0x03, 0x06, 0x0C, 0x18, 0x30, 0x60, 0x60, 0x60}, // 7
            {0x3C, 0x7E, 0xC3, 0xC3, 0x7E, 0x7E, 0xC3, 0xC3, 0x7E, 0x3C}, // 8
            {0x3C, 0x7E, 0xC3, 0xC3, 0x7F, 0x3F, 0x03, 0x03, 0x3E, 0x7C}  // 9
    };

    private static final int[][] XO_CHIP_BIG = {
            {0xFF, 0xFF, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF}, // 0
            {0x18, 0x78, 0x78, 0x18, 0x18, 0x18, 0x18, 0x18, 0xFF, 0xFF}, // 1
            {0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF}, // 2
            {0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF}, // 3
            {0xC3, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0x03, 0x03, 0x03, 0x03}, // 4
            {0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF}, // 5
            {0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF}, // 6
            {0xFF, 0xFF, 0x03, 0x03, 0x06, 0x0C, 0x18, 0x18, 0x18, 0x18}, // 7
            {0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF}, // 8
            {0xFF, 0xFF, 0xC3, 0xC3, 0xFF, 0xFF, 0x03, 0x03, 0xFF, 0xFF}, // 9
            {0x7E, 0xFF, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF, 0xC3, 0xC3, 0xC3}, // A
            {0xFC, 0xFC, 0xC3, 0xC3, 0xFC, 0xFC, 0xC3, 0xC3, 0xFC, 0xFC}, // B
            {0x3C, 0xFF, 0xC3, 0xC0, 0xC0, 0xC0, 0xC0, 0xC3, 0xFF, 0x3C}, // C
            {0xFC, 0xFE, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xC3, 0xFE, 0xFC}, // D
            {0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF}, // E
            {0xFF, 0xFF, 0xC0, 0xC0, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0}  // F
    };

    private final int[][] smallFont;
    private final int[][] bigFont;

    public SpriteFont(Chip8Variant chip8Variant) {
        switch (chip8Variant) {
            case CHIP_8, CHIP_8X -> {
                this.smallFont = CHIP_8;
                this.bigFont = null;
            }
            case SUPER_CHIP_LEGACY, SUPER_CHIP_MODERN, MEGA_CHIP -> {
                this.smallFont = CHIP_48;
                this.bigFont = SCHIP_BIG;
            }
            case XO_CHIP -> {
                this.smallFont = CHIP_48;
                this.bigFont = XO_CHIP_BIG;
            }
            default -> throw new IllegalArgumentException("CHIP-8 variant not set!");
        }
    }

    public int[][] getSmallFont() {
        return this.smallFont;
    }

    public Optional<int[][]> getBigFont() {
        return Optional.ofNullable(this.bigFont);
    }

    public int getSmallFontSpriteOffset(int hex) {
        return SMALL_FONT_BEGIN_OFFSET + (5 * hex);
    }

    public int getBigFontSpriteOffset(int hex) {
        return BIG_FONT_BEGIN_OFFSET + (10 * hex);
    }

}
