package io.github.arkosammy12.jchip.io;

import java.util.Arrays;
import java.util.List;
import java.util.stream.Collectors;

public enum CharacterSprites {
    ZERO(0x0, 0x50, 0xF0, 0x90, 0x90, 0x90, 0xF0),
    ONE(0x1, 0x55, 0x20, 0x60, 0x20, 0x20, 0x70),
    TWO(0x2, 0x5A, 0xF0, 0x10, 0xF0, 0x80, 0xF0),
    THREE(0x3, 0x5F, 0xF0, 0x10, 0xF0, 0x10, 0xF0),
    FOUR(0x4, 0x64, 0x90, 0x90, 0xF0, 0x10, 0x10),
    FIVE(0x5, 0x69, 0xF0, 0x80, 0xF0, 0x10, 0xF0),
    SIX(0x6, 0x6E, 0xF0, 0x80, 0xF0, 0x90, 0xF0),
    SEVEN(0x7, 0x73, 0xF0, 0x10, 0x20, 0x40, 0x40),
    EIGHT(0x8, 0x78, 0xF0, 0x90, 0xF0, 0x90, 0xF0),
    NINE(0x9, 0x7D, 0xF0, 0x90, 0xF0, 0x10, 0xF0),
    A(0xA, 0x82, 0xF0, 0x90, 0xF0, 0x90, 0x90),
    B(0xB, 0x87, 0xE0, 0x90, 0xE0, 0x90, 0xE0),
    C(0xC, 0x8C, 0xF0, 0x80, 0x80, 0x80, 0xF0),
    D(0xD, 0x91, 0xE0, 0x90, 0x90, 0x90, 0xE0),
    E(0xE, 0x96, 0xF0, 0x80, 0xF0, 0x80, 0xF0),
    F(0xF, 0x9B, 0xF0, 0x80, 0xF0, 0x80, 0x80);

    CharacterSprites(int character, int offset, int... bitmap) {
        this.character = character;
        this.offset = offset;
        this.bitmap = bitmap;
    }

    private final int character;
    private final int offset;
    private final int[] bitmap;

    public static List<CharacterSprites> getFontCharacters() {
        return Arrays.stream(CharacterSprites.values()).collect(Collectors.toList());
    }

    public int[] getBitmap() {
        return this.bitmap;
    }

    public int getOffset() {
        return this.offset;
    }

    public int getCharacter() {
        return this.character;
    }

    public static int getCharacterOffsetForValue(int value) {
        for (CharacterSprites sprite : CharacterSprites.values()) {
            if (sprite.getCharacter() == value) {
                return sprite.getOffset();
            }
        }
        throw new IllegalArgumentException("Tried to fetch character memory offset for unexpected value: " + value + "!");
    }

}